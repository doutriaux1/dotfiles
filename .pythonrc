import readline
import rlcompleter
readline.parse_and_bind("tab: complete")
import sys,os
import vtk
renWin = vtk.vtkRenderWindow()
ren = vtk.vtkRenderer()
renWin.AddRenderer(ren)
a = vtk.vtkActor()
m = vtk.vtkPolyDataMapper()

import cdms2
import cdat_info
try:
  smpl_prfx = cdat_info.get_sampledata_path()
except:
  smpl_prfx = os.path.join(sys.prefix,"sample_data")
fnm = os.path.join(smpl_prfx,'clt.nc')
f=cdms2.open(fnm)
s=f("clt")
import cdutil
cdutil.times.setTimeBoundsMonthly(s)
import genutil
fnm=os.path.join(smpl_prfx,'clt.nc')
fnmirr=os.path.join(smpl_prfx,'sampleGenGrid3.nc')
fnmcurv=os.path.join(smpl_prfx, 'sampleCurveGrid4.nc')
import numpy
import cdtime
import vcs
#from PyQt4 import QtCore, QtGui
#x=vcs.init(geometry={"width":800,"height":600})
x=vcs.init()
iso=x.createisofill()
T=x.createtemplate()

def Classes(obj,firsttime=True):
   if firsttime:
     obj=obj.__class__
   res=set()
   for c in obj.__bases__:
     res.add(c)
     res.update(Classes(c,False))
   return res

f=cdms2.open(fnm)
s=f('clt')
t=s.getTime()
tc=t.asComponentTime()

